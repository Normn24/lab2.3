{"version":3,"sources":["main.js","make-visits.js"],"names":["usersData","email","password","cards","id","name","doctor","description","status","priority","async","getToken","user","find","token","Math","random","toString","Error","error","alert","message","showHide","enterBtn","document","querySelector","logoutBtn","createVisitBtn","filterPage","header","style","background","height","display","classList","add","remove","login","sessionStorage","getItem","fetchAndDisplayCards","addEventListener","modalForm","emailForm","passwordForm","e","preventDefault","value","form","trueToken","submitForm","target","contains","removeItem","window","location","reload","innerHTML","forEach","cardData","displayCard","console","taskBoard","cardContainer","createElement","className","setAttribute","appendChild","deleteCard","cardId","confirmation","confirm","cardIndex","findIndex","card","splice","openEditModal","optionActive","option","editForm","comment","editFormContainer","getElementById","handleDoctorChange","selectedDoctor","additionalFieldsContainer","closeModal","saveChanges","newName","newDoctor","newDescription","newStatus","newPriority","newComment","newAge","newPressure","newBMi","newDesease","age","pulse","massIndex","pastDiseases","newDate","lastVisit","showMore","detailsContainer","detailsContent","baseInfo","closeShowMore","filterCards","searchInput","toLowerCase","doctorFilter","statusFilter","priorityFilter","cardToRemove","nameElement","doctorElement","statusElement","priorityElement","nameMatch","includes","doctorMatch","statusMatch","priorityMatch","btnMakeForm","createModal","inputCreateName","purpose","btnCloseForm","selectMenuDoctors","selectPriorityContainer","btnCreateVisit","elementsForm","querySelectorAll","formData","Module","[object Object]","element","event","this","clearModal","Array","from","filter","divElement","getComputedStyle","some","inputElement","parseFloat","textContent","pressureValue","isNaN","massValue","createNameValue","minimalVisit","Date","maxVisit","lastVisitValue","convertValue","data","CreateVisit","sendInfo","Visit","dontAddElements","changeHandler","VisitDentist","super","VisitTherapist","VisitCardiologist","openModalWindow","module","visit","makeOptions","visitDentist","doctorNotes","visitTherapist","visitCardiologist","closeForm","newCard","floor","push"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["\nconst usersData = [\n  {\n    email: '123',\n    password: '1234',\n    cards: [\n      { id: 1, name: 'wadwa', doctor: 'Cardiologist', description: 'Description 1', status: 'active', priority: 'medium' },\n      { id: 2, name: 'awd', doctor: 'Dentist', description: 'Description 2', status: 'active', priority: 'high' }\n    ]\n  },\n  {\n    email: 'user2@example.com',\n    password: 'password2',\n    cards: [\n      { id: 3, name: 'awdawd', doctor: 'Therapist', description: 'Description 3', status: 'active', priority: 'high' },\n      { id: 4, name: 'Card 4', doctor: 'Cardiologist', description: 'Description 4', status: 'active', priority: 'medium' }\n    ]\n  }\n];\n\n\nasync function getToken(email, password) {\n  try {\n    const user = usersData.find(user => user.email === email && user.password === password);\n    if (user) {\n      const token = Math.random().toString(36);\n      user.token = token;\n      return token;\n    } else {\n      throw new Error('User is not registered!');\n    }\n  } catch (error) {\n    alert(error.message);\n  }\n}\n\nasync function showHide() {\n  const enterBtn = document.querySelector('.login-button');\n  const logoutBtn = document.querySelector('.logout-button');\n  const createVisitBtn = document.querySelector('.create-visit-button');\n  const filterPage = document.querySelector(\".filter__section\");\n  const header = document.querySelector(\".header\");\n\n  header.style.background = \"none\";\n  header.style.height = \"auto\";\n  filterPage.style.display = \"block\";\n  enterBtn.classList.add('hidden');\n  logoutBtn.classList.remove('hidden');\n  createVisitBtn.classList.remove('hidden');\n}\n\nasync function login() {\n  const enterBtn = document.querySelector('.login-button');\n  const logoutBtn = document.querySelector('.logout-button');\n\n  if (!sessionStorage.getItem('token')) {\n    enterBtn.addEventListener('click', showModal);\n  } else {\n    showHide();\n    await fetchAndDisplayCards();\n  }\n\n  logoutBtn.addEventListener('click', () => {\n    sessionStorage.removeItem('token')\n    window.location.reload()\n  });\n\n  async function showModal() {\n    const modalForm = document.querySelector('#authorization-modal');\n    modalForm.style.display = 'block';\n\n    const emailForm = modalForm.querySelector('input[type=\"email\"]');\n    const passwordForm = modalForm.querySelector('input[type=\"password\"]');\n    const btnForm = modalForm.querySelector('.send-button');\n\n    btnForm.addEventListener('click', handleSubmit);\n\n    modalForm.addEventListener('click', (e) => {\n      if (e.target.classList.contains('modal') || e.target.classList.contains('btn-close')) {\n        modalForm.style.display = 'none';\n        emailForm.value = '';\n        passwordForm.value = '';\n      }\n    });\n\n    async function handleSubmit(e) {\n      e.preventDefault();\n      if (emailForm.value && passwordForm.value) {\n        submitForm(modalForm, emailForm.value, passwordForm.value);\n      } else {\n        alert('Fill in all fields!');\n      }\n    }\n\n  }\n\n  async function submitForm(form, email, password) {\n    const token = await getToken(email, password);\n\n    if (token) {\n      sessionStorage.token = token;\n      showHide();\n      form.style.display = 'none';\n      trueToken = token;\n      await fetchAndDisplayCards();\n    }\n\n    return token;\n  }\n}\n\nasync function fetchAndDisplayCards() {\n  const token = sessionStorage.getItem('token');\n\n  if (token) {\n    try {\n      const user = usersData.find(user => user.token === token);\n      if (user) {\n        const cards = user.cards;\n\n        const taskBoard = document.querySelector(\"#taskBoard\");\n        taskBoard.innerHTML = \"\";\n\n        cards.forEach(async (cardData) => {\n          await displayCard(cardData);\n        });\n      } else {\n        console.error(\"User not found!\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching cards:\", error);\n    }\n  }\n}\nlogin();\nasync function displayCard(cardData) {\n  const taskBoard = document.querySelector(\"#taskBoard\");\n  const cardContainer = document.createElement(\"div\");\n\n  cardContainer.className = \"card\";\n  cardContainer.setAttribute(\"data-id\", cardData.id);\n\n  cardContainer.innerHTML = `\n      <div class=\"card__text\">\n      <h4>Name:</h4> <p>${cardData.name}</p>\n      <h4>Doctor:</h4> <p>${cardData.doctor}</p>\n      <h4>Description:</h4> <p>${cardData.description}</p>\n      </div>\n      <div class=\"button__contianer\">\n      <button onclick=\"showMore(${cardData.id})\">Show more</button>\n      <button onclick=\"openEditModal(${cardData.id})\">Edit</button>\n      </div>\n      <span class=\"delete-icon\" onclick=\"deleteCard(${cardData.id})\">&#10006;</span>\n    `;\n\n  taskBoard.appendChild(cardContainer);\n}\n\nasync function deleteCard(cardId) {\n  const confirmation = confirm(\"Are you sure, you want to delete?\");\n  const token = sessionStorage.getItem('token');\n\n  if (confirmation && token) {\n    try {\n      const user = usersData.find(user => user.token === token);\n      if (user) {\n        const cardIndex = user.cards.findIndex(card => card.id === cardId);\n        if (cardIndex !== -1) {\n          user.cards.splice(cardIndex, 1);\n          fetchAndDisplayCards();\n        } else {\n          console.error(\"Card not found!\");\n        }\n      } else {\n        console.error(\"User not found!\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting card:\", error);\n    }\n  }\n}\n\nasync function openEditModal(cardId) {\n  const token = sessionStorage.getItem('token');\n  const user = usersData.find(user => user.token === token);\n  if (user) {\n    const cardData = user.cards.find(card => card.id === cardId);\n    if (cardData) {\n\n      const optionActive = (value, option) => value === option ? \"selected\" : \"\";\n\n      const editForm = document.createElement(\"div\");\n      editForm.className = \"edit__form\";\n      editForm.innerHTML = `\n    <div class=\"input-group\">\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editName\" value=\"${cardData.name}\">\n      <label for=\"editName\" class=\"user-label\">Name</label>\n    </div>\n    <div class=\"select select__edit-container\">\n      <label for=\"editDoctor\" class=\"select__label\">Doctor</label>\n      <select id=\"editDoctor\" class=\"edit__select\" onchange=\"handleDoctorChange()\">\n        <option value=\"Cardiologist\" ${optionActive(cardData.doctor, \"Cardiologist\")}>Cardiologist</option>\n        <option value=\"Dentist\"  ${optionActive(cardData.doctor, \"Dentist\")}>Dentist</option>\n        <option value=\"Therapist\"  ${optionActive(cardData.doctor, \"Therapist\")}>Therapist</option>\n      </select>\n    </div>\n    <div class=\"input-group\">\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editDescription\" value=\"${cardData.description}\">\n      <label for=\"editDescription\" class=\"user-label\">Description</label>\n    </div>\n    \n  <div class=\"select select__edit-container\">\n  <label for=\"editStatus\" class=\"select__label\">Status</label>\n    <select id=\"editStatus\" class=\"edit__select\">\n      <option value=\"\" disabled selected>Select status</option>\n      <option value=\"active\" ${optionActive(cardData.status, \"active\")}>Active</option>\n      <option value=\"completed\" ${optionActive(cardData.status, \"completed\")}>Completed</option>\n    </select>\n    </div>\n    <div class=\"select select__edit-container\">\n    <label for=\"editPriority\" class=\"select__label \">Priority</label>\n    <select id=\"editPriority\" class=\"edit__select\">\n      <option value=\"\" disabled selected>Select priority</option>\n      <option value=\"low\" ${optionActive(cardData.priority, \"low\")}>Low</option>\n      <option value=\"medium\" ${optionActive(cardData.priority, \"medium\")}>Medium</option>\n      <option value = \"high\" ${optionActive(cardData.priority, \"high\")}> High</ >\n    </select > \n    </div>\n    <div class=\"input-group\">\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editComment\" value=\"${cardData.comment}\">\n      <label for=\"editComment\" class=\"user-label\">Comment</label>\n    </div>\n    <div id=\"additionalFields\"></div>\n    <button onclick=\"saveChanges(${cardId})\">Save</button>\n  `;\n      const editFormContainer = document.getElementById(\"editFormContainer\");\n      editFormContainer.innerHTML = \"\";\n      editFormContainer.appendChild(editForm);\n\n      const editModal = document.getElementById(\"editModal\");\n      editModal.style.display = \"block\";\n      handleDoctorChange(cardData);\n    } else {\n      console.error(\"Card not found!\");\n    }\n  } else {\n    console.error(\"User not found!\");\n  }\n\n}\n\nfunction handleDoctorChange() {\n  const selectedDoctor = document.getElementById(\"editDoctor\").value;\n  const additionalFieldsContainer = document.getElementById(\"additionalFields\");\n\n  additionalFieldsContainer.innerHTML = \"\";\n\n  if (selectedDoctor === 'Cardiologist') {\n    additionalFieldsContainer.innerHTML = `\n      <div class=\"input-group\">\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\n        <label for=\"editAge\" class=\"user-label\">Age</label>\n      </div>\n      <div class=\"input-group\">\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editPressure\">\n        <label for=\"editPressure\" class=\"user-label\">Normal pressure</label>\n      </div>\n      <div class=\"input-group\">\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editBMI\">\n        <label for=\"editBMI\" class=\"user-label\">Body mass index</label>\n      </div>\n      <div class=\"input-group\">\n        <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"text\" id=\"editHeartDisease\">\n        <label for=\"editHeartDisease\" class=\"user-label\">Past diseases</label>\n      </div>\n    `;\n  } else if (selectedDoctor === 'Dentist') {\n    additionalFieldsContainer.innerHTML = `\n    <div class=\"input-group\">\n    <label for=\"editLastVisitDate\" class=\"select__label\">Date of the last visit</label>\n      <input required=\"\" name=\"text\" autocomplete=\"off\" class=\"input edit__date\" type=\"date\" id=\"editLastVisitDate\">\n    </div>\n    `;\n  } else if (selectedDoctor === 'Therapist') {\n    additionalFieldsContainer.innerHTML = `\n    <div class=\"input-group\">\n      <input required=\"\"  name=\"text\" autocomplete=\"off\" class=\"input\" type=\"number\" id=\"editAge\">\n      <label for=\"editAge\" class=\"user-label\">Age</label>\n    </div>\n    `;\n  }\n}\n\nfunction closeModal() {\n  const editModal = document.getElementById(\"editModal\");\n  editModal.style.display = \"none\";\n  const editForm = document.querySelector(\".edit__form\");\n  editForm.innerHTML = \"\";\n}\n\nasync function saveChanges(cardId) {\n  const token = sessionStorage.getItem('token');\n  const editForm = document.querySelector(\".edit__form\")\n  const cardContainer = document.querySelector(`.card[data-id= \"${cardId}\"]`);\n  const newName = editForm.querySelector(\"#editName\").value;\n  const newDoctor = editForm.querySelector(\"#editDoctor\").value;\n  const newDescription = editForm.querySelector(\"#editDescription\").value;\n  const newStatus = editForm.querySelector(\"#editStatus\").value;\n  const newPriority = editForm.querySelector(\"#editPriority\").value;\n  const newComment = editForm.querySelector(\"#editComment\").value;\n\n\n  const user = usersData.find(user => user.token === token);\n  if (user) {\n    const cardData = user.cards.find(card => card.id === cardId);\n\n    if (cardData) {\n\n      cardData.name = newName;\n      cardData.doctor = newDoctor;\n      cardData.description = newDescription;\n      cardData.status = newStatus;\n      cardData.priority = newPriority;\n      cardData.comment = newComment;\n\n\n      if (newDoctor === \"Cardiologist\") {\n        const newAge = editForm.querySelector(\"#editAge\").value;\n        const newPressure = editForm.querySelector(\"#editPressure\").value;\n        const newBMi = editForm.querySelector(\"#editBMI\").value;\n        const newDesease = editForm.querySelector(\"#editHeartDisease\").value;\n        cardData.age = newAge;\n        cardData.pulse = newPressure;\n        cardData.massIndex = newBMi;\n        cardData.pastDiseases = newDesease;\n      } else if (newDoctor === \"Dentist\") {\n        const newDate = editForm.querySelector(\"#editLastVisitDate\").value;\n        cardData.lastVisit = newDate;\n      } else if (newDoctor === \"Therapist\") {\n        const newAge = editForm.querySelector(\"#editAge\").value;\n        cardData.age = newAge;\n      }\n\n      cardContainer.innerHTML = `\n        <div class=\"card__text\">\n        <h4>Name:</h4> <p>${newName}</p>\n        <h4>Doctor:</h4> <p>${newDoctor}</p>\n        <h4>Description:</h4> <p>${newDescription}</p>\n        </div>\n        <div class=\"button__contianer\">\n        <button onclick=\"showMore(${cardId})\">Show more</button>\n        <button onclick=\"openEditModal(${cardId})\">Edit</button>\n        </div>\n        <span class=\"delete-icon\" onclick=\"deleteCard(${cardId})\">&#10006;</span>\n            `;\n\n      closeModal();\n    } else {\n      console.error(\"Card not found!\");\n    }\n  } else {\n    console.error(\"User not found!\");\n  }\n}\n\nasync function showMore(cardId) {\n  const token = sessionStorage.getItem('token');\n  const user = usersData.find(user => user.token === token);\n  if (user) {\n    const cardData = user.cards.find(card => card.id === cardId);\n    if (cardData) {\n\n      const detailsContainer = document.getElementById(\"detailsContainer\");\n      const detailsContent = document.createElement(\"div\");\n\n      detailsContent.className = \"details__content\";\n      const baseInfo = `\n    <h4>Name: <span>${cardData.name}</span></h4>\n    <h4>Doctor: <span>${cardData.doctor}</span></h4>\n    <h4>Description: <span>${cardData.description}</span></h4>\n    <h4>Priority: <span>${cardData.priority}</span></h4>\n    <h4>Status: <span>${cardData.status}</span></h4>\n    <h4>Comment for doctor: <span>${cardData.comment}</span></h4>\n  `;\n\n      if (cardData.doctor === 'Cardiologist') {\n        detailsContent.innerHTML = `\n    ${baseInfo}\n      <h4>Age: <span>${cardData.age}</span></h4>\n      <h4>Normalpressure: <span>${cardData.pulse}</span></h4>\n      <h4>Body mass index: <span>${cardData.massIndex}</span></h4>\n      <h4>Past diseases: <span>${cardData.pastDiseases}</span></h4>\n    `;\n      } else if (cardData.doctor === 'Dentist') {\n        detailsContent.innerHTML = `\n    ${baseInfo}\n      <h4>Date of the last visit: <span>${cardData.lastVisit}</span></h4>\n    `;\n      } else if (cardData.doctor === 'Therapist') {\n        detailsContent.innerHTML = `\n    ${baseInfo}\n    <h4>Age: <span>${cardData.age}</span></h4>\n    `;\n      }\n\n      detailsContainer.innerHTML = \"\";\n      detailsContainer.appendChild(detailsContent);\n\n      const detailsModal = document.getElementById(\"detailsModal\");\n      detailsModal.style.display = \"block\";\n\n    } else {\n      console.error(\"Card not found!\");\n    }\n  } else {\n    console.error(\"User not found!\");\n  }\n}\n\nfunction closeShowMore() {\n  const detailsModal = document.getElementById(\"detailsModal\");\n  detailsModal.style.display = \"none\";\n}\n\nasync function filterCards() {\n  const token = sessionStorage.getItem('token');\n  const searchInput = document.getElementById(\"searchInput\").value.toLowerCase();\n  const doctorFilter = document.getElementById(\"doctorFilter\").value;\n  const statusFilter = document.getElementById(\"statusFilter\").value;\n  const priorityFilter = document.getElementById(\"priorityFilter\").value;\n\n  const user = usersData.find(user => user.token === token);\n  const cards = user.cards;\n  if (user) {\n\n    cards.forEach(card => {\n      const cardToRemove = document.querySelector(`.card[data-id=\"${card.id}\"]`);\n      const nameElement = card.name;\n      const doctorElement = card.doctor;\n      const statusElement = card.status;\n      const priorityElement = card.priority;\n\n      const name = nameElement ? nameElement.toLowerCase() : \"\";\n      const doctor = doctorElement ? doctorElement : \"\";\n      const status = statusElement ? statusElement.toLowerCase() : \"\";\n      const priority = priorityElement ? priorityElement.toLowerCase() : \"\";\n\n      const nameMatch = name.includes(searchInput);\n      const doctorMatch = (doctorFilter === '' || doctor === doctorFilter);\n      const statusMatch = (statusFilter === '' || status === statusFilter);\n      const priorityMatch = (priorityFilter === '' || priority === priorityFilter);\n\n      if (nameMatch && statusMatch && priorityMatch && doctorMatch) {\n        cardToRemove.style.display = \"\";\n      } else {\n        cardToRemove.style.display = \"none\";\n      }\n    });\n  } else {\n    console.error(\"User not found!\");\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","const btnMakeForm = document.querySelector('.header__btn-make-visit');\r\nconst form = document.querySelector('.header__form');\r\n\r\nconst createModal = document.getElementById(\"createModal\");\r\nconst inputCreateName = document.querySelector(\"#create__inputName\")\r\nconst purpose = document.querySelector('#create__inputPurpose')\r\nconst age = document.querySelector('#create__inputAge')\r\nconst pulse = document.querySelector('#create__inputPressure')\r\nconst massIndex = document.querySelector('#create__inputBMI')\r\nconst description = document.querySelector('#create__inputDescription')\r\nconst pastDiseases = document.querySelector('#create__inputDisease')\r\nconst lastVisit = document.querySelector('#create__inputLastVisit')\r\nconst comment = document.querySelector('#create__inputComment')\r\nconst error = document.querySelector('.form__error')\r\nconst btnCloseForm = document.querySelector('.form__button-close-form')\r\nconst selectMenuDoctors = document.querySelector('.form__selector-doctors')\r\nconst selectPriorityContainer = document.querySelector(\"#create__selectPriority\")\r\n\r\nconst btnCreateVisit = document.querySelector('.form__button-create-visit')\r\nlet elementsForm = document.querySelectorAll('.form input, .form select')\r\nlet formData = []\r\nclass Module {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    clearModal() {\r\n        form.style.display = `none`;\r\n        createModal.style.display = 'none';\r\n        elementsForm.forEach((element) => {\r\n            element.value = '';\r\n        })\r\n        purpose.style.display = 'none';\r\n        description.style.display = 'none';\r\n        inputCreateName.style.display = \"none\";\r\n        selectPriorityContainer.style.display = 'none';\r\n        btnCreateVisit.style.display = 'none';\r\n        comment.style.display = 'none';\r\n        pastDiseases.style.display = 'none';\r\n        massIndex.style.display = 'none';\r\n        pulse.style.display = 'none';\r\n        age.style.display = 'none';\r\n        lastVisit.style.display = 'none';\r\n        error.style.display = 'none';\r\n    }\r\n\r\n    closeForm() {\r\n        btnCloseForm.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            this.clearModal();\r\n        })\r\n\r\n        document.addEventListener('click', (event) => {\r\n            if (event.target === createModal) {\r\n                this.clearModal();\r\n            }\r\n        })\r\n    }\r\n\r\n    sendInfo() {\r\n        btnCreateVisit.addEventListener('click', async (event) => {\r\n            event.preventDefault();\r\n            const fields = Array.from(document.querySelectorAll('.form div')).filter((divElement) => {\r\n                return window.getComputedStyle(divElement).display !== 'none' && divElement.id !== 'create__inputComment'\r\n            }).some((divElement) => {\r\n                const elements = Array.from(divElement.querySelectorAll('input, select'))\r\n                return elements.some((inputElement) => inputElement.value === '')\r\n\r\n            });\r\n\r\n            if (fields) {\r\n                error.style.display = 'block';\r\n                return;\r\n            } if (age.style.display !== 'none') {\r\n\r\n                if (parseFloat(document.querySelector('#createAge').value) >= 150 || parseFloat(document.querySelector('#createAge').value) <= 0) {\r\n                    error.textContent = 'Incorrect value! Enter your real age';\r\n                    error.style.display = 'block';\r\n                    return;\r\n                }\r\n            }\r\n            if (pulse.style.display !== 'none') {\r\n                const pressureValue = parseFloat(document.querySelector('#createPressure').value);\r\n                if (isNaN(pressureValue) || pressureValue >= 170 || pressureValue <= 50) {\r\n                    error.textContent = 'Incorrect value! Enter your real pulse';\r\n                    error.style.display = 'block';\r\n                    return;\r\n                }\r\n            }\r\n            if (massIndex.style.display !== 'none') {\r\n                const massValue = parseFloat(document.querySelector('#createBMI').value);\r\n                if (isNaN(massValue) || massValue >= 700 || massValue <= 0) {\r\n                    error.textContent = 'Incorrect value! Enter your real mass index';\r\n                    error.style.display = 'block';\r\n                    return;\r\n                }\r\n            }\r\n            const createNameValue = document.querySelector('#createName').value;\r\n            if (!isNaN(parseFloat(createNameValue))) {\r\n                error.textContent = 'Incorrect value! Enter your real name';\r\n                error.style.display = 'block';\r\n                return;\r\n            }\r\n            if (lastVisit.style.display !== 'none') {\r\n                const minimalVisit = new Date('1950-01-01')\r\n                const maxVisit = new Date()\r\n                const lastVisitValue = document.querySelector('#createLastVisitDate')\r\n                const convertValue = new Date(lastVisitValue.value)\r\n                if (convertValue <= minimalVisit || convertValue >= maxVisit) {\r\n                    error.textContent = 'Incorrect value! Enter correct data';\r\n                    error.style.display = 'block';\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const data = new CreateVisit()\r\n\r\n            this.clearModal()\r\n\r\n            try {\r\n                await sendInfo(data);\r\n                await fetchAndDisplayCards()\r\n            } catch (error) {\r\n                console.error('Error sending data:', error)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nclass Visit {\r\n    constructor() {\r\n        this.dontAddElements = true\r\n    }\r\n\r\n    makeOptions() {\r\n        if (selectMenuDoctors && this.dontAddElements === true) {\r\n            this.dontAddElements = false\r\n\r\n            const changeHandler = () => {\r\n                purpose.style.display = 'block'\r\n                description.style.display = 'block'\r\n                inputCreateName.style.display = \"block\";\r\n                selectPriorityContainer.style.display = 'flex';\r\n                btnCreateVisit.style.display = 'block'\r\n                comment.style.display = 'block'\r\n            };\r\n            selectMenuDoctors.addEventListener('change', changeHandler)\r\n        }\r\n    }\r\n}\r\n\r\nclass VisitDentist extends Visit {\r\n    constructor() {\r\n        super();\r\n    }\r\n    doctorNotes() {\r\n        if (selectMenuDoctors) {\r\n            selectMenuDoctors.addEventListener('change', () => {\r\n                if (selectMenuDoctors.value === 'Dentist') {\r\n                    lastVisit.style.display = 'block'\r\n                } else {\r\n                    lastVisit.style.display = 'none'\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\nclass VisitTherapist extends Visit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    doctorNotes() {\r\n        if (selectMenuDoctors) {\r\n            selectMenuDoctors.addEventListener('change', () => {\r\n                if (selectMenuDoctors.value === 'Cardiologist' || selectMenuDoctors.value === \"Therapist\") {\r\n                    age.style.display = 'block';\r\n                } else {\r\n                    age.style.display = 'none';\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nclass VisitCardiologist extends Visit {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    doctorNotes() {\r\n        if (selectMenuDoctors) {\r\n            selectMenuDoctors.addEventListener('change', () => {\r\n                if (selectMenuDoctors.value === \"Cardiologist\") {\r\n                    pulse.style.display = 'block';\r\n                    massIndex.style.display = 'block';\r\n                    pastDiseases.style.display = 'block';\r\n\r\n                } else {\r\n                    pastDiseases.style.display = 'none';\r\n                    massIndex.style.display = 'none';\r\n                    pulse.style.display = 'none';\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction openModalWindow() {\r\n    createModal.style.display = \"block\";\r\n    form.style.display = `flex`;\r\n}\r\n\r\nconst module = new Module();\r\n\r\nconst visit = new Visit();\r\nvisit.makeOptions();\r\nconst visitDentist = new VisitDentist();\r\nvisitDentist.doctorNotes();\r\n\r\nconst visitTherapist = new VisitTherapist();\r\nvisitTherapist.doctorNotes();\r\nconst visitCardiologist = new VisitCardiologist();\r\nvisitCardiologist.doctorNotes();\r\nmodule.sendInfo();\r\nmodule.closeForm();\r\n\r\n\r\n\r\nclass CreateVisit {\r\n    constructor() {\r\n        this.doctor = form.querySelector('.form__selector-doctors').value\r\n        this.name = form.querySelector('.form__patient-name').value\r\n        this.priority = form.querySelector('.form__selector-urgency').value\r\n        this.purpose = form.querySelector('.form__purpose').value\r\n        this.description = form.querySelector('.form__description').value\r\n        this.lastVisit = form.querySelector('.form__last-visit').value\r\n        this.age = form.querySelector('.form__age').value\r\n        this.pulse = form.querySelector('.form__pulse').value\r\n        this.massIndex = form.querySelector('.form__mass-index').value\r\n        this.pastDiseases = form.querySelector('.form__past-diseases').value\r\n        this.comment = form.querySelector('.form__comment').value\r\n        this.status = \"active\"\r\n    }\r\n}\r\n\r\n\r\nasync function sendInfo(data) {\r\n    const token = sessionStorage.getItem('token');\r\n    try {\r\n        const user = usersData.find(user => user.token === token);\r\n        if (user) {\r\n            const newCard = {\r\n                id: Math.floor(Math.random() * 10000),\r\n                ...data\r\n            };\r\n            user.cards.push(newCard);\r\n            return newCard;\r\n        } else {\r\n            throw new Error('User not found!');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error sending data:', error);\r\n        throw new Error(error);\r\n    }\r\n}\r\n"]}