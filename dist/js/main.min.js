"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
var usersData = [{
  email: "123",
  password: "1234",
  cards: [{
    id: 1,
    name: "wadwa",
    doctor: "Cardiologist",
    description: "Description 1",
    status: "active",
    priority: "medium"
  }, {
    id: 2,
    name: "awd",
    doctor: "Dentist",
    description: "Description 2",
    status: "active",
    priority: "high"
  }]
}, {
  email: "user2@example.com",
  password: "password2",
  cards: [{
    id: 3,
    name: "awdawd",
    doctor: "Therapist",
    description: "Description 3",
    status: "active",
    priority: "high"
  }, {
    id: 4,
    name: "Card 4",
    doctor: "Cardiologist",
    description: "Description 4",
    status: "active",
    priority: "medium"
  }]
}];
function getToken(_x, _x2) {
  return _getToken.apply(this, arguments);
}
function _getToken() {
  _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e, t) {
    var n, _e;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;
          n = usersData.find(function (n) {
            return n.email === e && n.password === t;
          });
          if (!n) {
            _context.next = 5;
            break;
          }
          _e = Math.random().toString(36);
          return _context.abrupt("return", (n.token = _e, _e));
        case 5:
          throw new Error("User is not registered!");
        case 8:
          _context.prev = 8;
          _context.t0 = _context["catch"](0);
          alert(_context.t0.message);
        case 11:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[0, 8]]);
  }));
  return _getToken.apply(this, arguments);
}
function showHide() {
  return _showHide.apply(this, arguments);
}
function _showHide() {
  _showHide = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
    var e, t, n, o, s;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          e = document.querySelector(".login-button"), t = document.querySelector(".logout-button"), n = document.querySelector(".create-visit-button"), o = document.querySelector(".filter__section"), s = document.querySelector(".header");
          s.style.background = "none", s.style.height = "auto", o.style.display = "block", e.classList.add("hidden"), t.classList.remove("hidden"), n.classList.remove("hidden");
        case 2:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return _showHide.apply(this, arguments);
}
function login() {
  return _login.apply(this, arguments);
}
function _login() {
  _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {
    var e, t;
    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          e = document.querySelector(".login-button"), t = document.querySelector(".logout-button");
          if (!sessionStorage.getItem("token")) {
            _context6.next = 7;
            break;
          }
          showHide();
          _context6.next = 5;
          return fetchAndDisplayCards();
        case 5:
          _context6.next = 8;
          break;
        case 7:
          e.addEventListener("click", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
            var e, t, n;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) switch (_context5.prev = _context5.next) {
                case 0:
                  e = document.querySelector("#authorization-modal");
                  e.style.display = "block";
                  t = e.querySelector('input[type="email"]'), n = e.querySelector('input[type="password"]');
                  e.querySelector(".send-button").addEventListener("click", /*#__PURE__*/function () {
                    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(o) {
                      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                        while (1) switch (_context4.prev = _context4.next) {
                          case 0:
                            o.preventDefault(), t.value && n.value ? function () {
                              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e, t, n) {
                                var o;
                                return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                                  while (1) switch (_context3.prev = _context3.next) {
                                    case 0:
                                      _context3.next = 2;
                                      return getToken(t, n);
                                    case 2:
                                      o = _context3.sent;
                                      _context3.t0 = o;
                                      if (!_context3.t0) {
                                        _context3.next = 11;
                                        break;
                                      }
                                      sessionStorage.token = o;
                                      showHide();
                                      e.style.display = "none";
                                      trueToken = o;
                                      _context3.next = 11;
                                      return fetchAndDisplayCards();
                                    case 11:
                                    case "end":
                                      return _context3.stop();
                                  }
                                }, _callee3);
                              }));
                              return function (_x9, _x10, _x11) {
                                return _ref3.apply(this, arguments);
                              };
                            }()(e, t.value, n.value) : alert("Fill in all fields!");
                          case 1:
                          case "end":
                            return _context4.stop();
                        }
                      }, _callee4);
                    }));
                    return function (_x8) {
                      return _ref2.apply(this, arguments);
                    };
                  }()), e.addEventListener("click", function (o) {
                    (o.target.classList.contains("modal") || o.target.classList.contains("btn-close")) && (e.style.display = "none", t.value = "", n.value = "");
                  });
                case 4:
                case "end":
                  return _context5.stop();
              }
            }, _callee5);
          })));
        case 8:
          t.addEventListener("click", function () {
            sessionStorage.removeItem("token"), window.location.reload();
          });
        case 9:
        case "end":
          return _context6.stop();
      }
    }, _callee6);
  }));
  return _login.apply(this, arguments);
}
function fetchAndDisplayCards() {
  return _fetchAndDisplayCards.apply(this, arguments);
}
function _fetchAndDisplayCards() {
  _fetchAndDisplayCards = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
    var e, t, _e2;
    return _regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) switch (_context8.prev = _context8.next) {
        case 0:
          e = sessionStorage.getItem("token");
          if (e) try {
            t = usersData.find(function (t) {
              return t.token === e;
            });
            if (t) {
              _e2 = t.cards;
              document.querySelector("#taskBoard").innerHTML = "", _e2.forEach( /*#__PURE__*/function () {
                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(e) {
                  return _regeneratorRuntime().wrap(function _callee7$(_context7) {
                    while (1) switch (_context7.prev = _context7.next) {
                      case 0:
                        _context7.next = 2;
                        return displayCard(e);
                      case 2:
                      case "end":
                        return _context7.stop();
                    }
                  }, _callee7);
                }));
                return function (_x12) {
                  return _ref4.apply(this, arguments);
                };
              }());
            } else console.error("User not found!");
          } catch (e) {
            console.error("Error fetching cards:", e);
          }
        case 2:
        case "end":
          return _context8.stop();
      }
    }, _callee8);
  }));
  return _fetchAndDisplayCards.apply(this, arguments);
}
function displayCard(_x3) {
  return _displayCard.apply(this, arguments);
}
function _displayCard() {
  _displayCard = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(e) {
    var t, n;
    return _regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) switch (_context9.prev = _context9.next) {
        case 0:
          t = document.querySelector("#taskBoard"), n = document.createElement("div");
          n.className = "card", n.setAttribute("data-id", e.id), n.innerHTML = "\n      <div class=\"card__text\">\n      <h4>Name:</h4> <p>".concat(e.name, "</p>\n      <h4>Doctor:</h4> <p>").concat(e.doctor, "</p>\n      <h4>Description:</h4> <p>").concat(e.description, "</p>\n      </div>\n      <div class=\"button__contianer\">\n      <button onclick=\"showMore(").concat(e.id, ")\">Show more</button>\n      <button onclick=\"openEditModal(").concat(e.id, ")\">Edit</button>\n      </div>\n      <span class=\"delete-icon\" onclick=\"deleteCard(").concat(e.id, ")\">&#10006;</span>\n    "), t.appendChild(n);
        case 2:
        case "end":
          return _context9.stop();
      }
    }, _callee9);
  }));
  return _displayCard.apply(this, arguments);
}
function deleteCard(_x4) {
  return _deleteCard.apply(this, arguments);
}
function _deleteCard() {
  _deleteCard = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(e) {
    var t, n, _t, _n;
    return _regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) switch (_context10.prev = _context10.next) {
        case 0:
          t = confirm("Are you sure, you want to delete?"), n = sessionStorage.getItem("token");
          if (t && n) try {
            _t = usersData.find(function (e) {
              return e.token === n;
            });
            if (_t) {
              _n = _t.cards.findIndex(function (t) {
                return t.id === e;
              });
              -1 !== _n ? (_t.cards.splice(_n, 1), fetchAndDisplayCards()) : console.error("Card not found!");
            } else console.error("User not found!");
          } catch (e) {
            console.error("Error deleting card:", e);
          }
        case 2:
        case "end":
          return _context10.stop();
      }
    }, _callee10);
  }));
  return _deleteCard.apply(this, arguments);
}
function openEditModal(_x5) {
  return _openEditModal.apply(this, arguments);
}
function _openEditModal() {
  _openEditModal = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(e) {
    var t, n, _t2, _n2, o, s;
    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          t = sessionStorage.getItem("token"), n = usersData.find(function (e) {
            return e.token === t;
          });
          if (n) {
            _t2 = n.cards.find(function (t) {
              return t.id === e;
            });
            if (_t2) {
              _n2 = function _n2(e, t) {
                return e === t ? "selected" : "";
              }, o = document.createElement("div");
              o.className = "edit__form", o.innerHTML = "\n    <div class=\"input-group\">\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editName\" value=\"".concat(_t2.name, "\">\n      <label for=\"editName\" class=\"user-label\">Name</label>\n    </div>\n    <div class=\"select select__edit-container\">\n      <label for=\"editDoctor\" class=\"select__label\">Doctor</label>\n      <select id=\"editDoctor\" class=\"edit__select\" onchange=\"handleDoctorChange()\">\n        <option value=\"Cardiologist\" ").concat(_n2(_t2.doctor, "Cardiologist"), ">Cardiologist</option>\n        <option value=\"Dentist\"  ").concat(_n2(_t2.doctor, "Dentist"), ">Dentist</option>\n        <option value=\"Therapist\"  ").concat(_n2(_t2.doctor, "Therapist"), ">Therapist</option>\n      </select>\n    </div>\n    <div class=\"input-group\">\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editDescription\" value=\"").concat(_t2.description, "\">\n      <label for=\"editDescription\" class=\"user-label\">Description</label>\n    </div>\n    \n  <div class=\"select select__edit-container\">\n  <label for=\"editStatus\" class=\"select__label\">Status</label>\n    <select id=\"editStatus\" class=\"edit__select\">\n      <option value=\"\" disabled selected>Select status</option>\n      <option value=\"active\" ").concat(_n2(_t2.status, "active"), ">Active</option>\n      <option value=\"completed\" ").concat(_n2(_t2.status, "completed"), ">Completed</option>\n    </select>\n    </div>\n    <div class=\"select select__edit-container\">\n    <label for=\"editPriority\" class=\"select__label \">Priority</label>\n    <select id=\"editPriority\" class=\"edit__select\">\n      <option value=\"\" disabled selected>Select priority</option>\n      <option value=\"low\" ").concat(_n2(_t2.priority, "low"), ">Low</option>\n      <option value=\"medium\" ").concat(_n2(_t2.priority, "medium"), ">Medium</option>\n      <option value = \"high\" ").concat(_n2(_t2.priority, "high"), "> High</ >\n    </select > \n    </div>\n    <div class=\"input-group\">\n      <input required=\"\" type=\"text\" name=\"text\" autocomplete=\"off\" class=\"input\" id=\"editComment\" value=\"").concat(_t2.comment, "\">\n      <label for=\"editComment\" class=\"user-label\">Comment</label>\n    </div>\n    <div id=\"additionalFields\"></div>\n    <button onclick=\"saveChanges(").concat(e, ")\">Save</button>\n  ");
              s = document.getElementById("editFormContainer");
              s.innerHTML = "", s.appendChild(o);
              document.getElementById("editModal").style.display = "block", handleDoctorChange(_t2);
            } else console.error("Card not found!");
          } else console.error("User not found!");
        case 2:
        case "end":
          return _context11.stop();
      }
    }, _callee11);
  }));
  return _openEditModal.apply(this, arguments);
}
function handleDoctorChange() {
  var e = document.getElementById("editDoctor").value,
    t = document.getElementById("additionalFields");
  t.innerHTML = "", "Cardiologist" === e ? t.innerHTML = '\n      <div class="input-group">\n        <input required=""  name="text" autocomplete="off" class="input" type="number" id="editAge">\n        <label for="editAge" class="user-label">Age</label>\n      </div>\n      <div class="input-group">\n        <input required=""  name="text" autocomplete="off" class="input" type="number" id="editPressure">\n        <label for="editPressure" class="user-label">Normal pressure</label>\n      </div>\n      <div class="input-group">\n        <input required=""  name="text" autocomplete="off" class="input" type="number" id="editBMI">\n        <label for="editBMI" class="user-label">Body mass index</label>\n      </div>\n      <div class="input-group">\n        <input required=""  name="text" autocomplete="off" class="input" type="text" id="editHeartDisease">\n        <label for="editHeartDisease" class="user-label">Past diseases</label>\n      </div>\n    ' : "Dentist" === e ? t.innerHTML = '\n    <div class="input-group">\n    <label for="editLastVisitDate" class="select__label">Date of the last visit</label>\n      <input required="" name="text" autocomplete="off" class="input edit__date" type="date" id="editLastVisitDate">\n    </div>\n    ' : "Therapist" === e && (t.innerHTML = '\n    <div class="input-group">\n      <input required=""  name="text" autocomplete="off" class="input" type="number" id="editAge">\n      <label for="editAge" class="user-label">Age</label>\n    </div>\n    ');
}
function closeModal() {
  document.getElementById("editModal").style.display = "none";
  document.querySelector(".edit__form").innerHTML = "";
}
function saveChanges(_x6) {
  return _saveChanges.apply(this, arguments);
}
function _saveChanges() {
  _saveChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(e) {
    var t, n, o, s, i, a, r, l, d, c, _t3, _e3, _o, _s, _i, _e4, _e5;
    return _regeneratorRuntime().wrap(function _callee12$(_context12) {
      while (1) switch (_context12.prev = _context12.next) {
        case 0:
          t = sessionStorage.getItem("token"), n = document.querySelector(".edit__form"), o = document.querySelector(".card[data-id= \"".concat(e, "\"]")), s = n.querySelector("#editName").value, i = n.querySelector("#editDoctor").value, a = n.querySelector("#editDescription").value, r = n.querySelector("#editStatus").value, l = n.querySelector("#editPriority").value, d = n.querySelector("#editComment").value, c = usersData.find(function (e) {
            return e.token === t;
          });
          if (c) {
            _t3 = c.cards.find(function (t) {
              return t.id === e;
            });
            if (_t3) {
              if (_t3.name = s, _t3.doctor = i, _t3.description = a, _t3.status = r, _t3.priority = l, _t3.comment = d, "Cardiologist" === i) {
                _e3 = n.querySelector("#editAge").value, _o = n.querySelector("#editPressure").value, _s = n.querySelector("#editBMI").value, _i = n.querySelector("#editHeartDisease").value;
                _t3.age = _e3, _t3.pulse = _o, _t3.massIndex = _s, _t3.pastDiseases = _i;
              } else if ("Dentist" === i) {
                _e4 = n.querySelector("#editLastVisitDate").value;
                _t3.lastVisit = _e4;
              } else if ("Therapist" === i) {
                _e5 = n.querySelector("#editAge").value;
                _t3.age = _e5;
              }
              o.innerHTML = "\n        <div class=\"card__text\">\n        <h4>Name:</h4> <p>".concat(s, "</p>\n        <h4>Doctor:</h4> <p>").concat(i, "</p>\n        <h4>Description:</h4> <p>").concat(a, "</p>\n        </div>\n        <div class=\"button__contianer\">\n        <button onclick=\"showMore(").concat(e, ")\">Show more</button>\n        <button onclick=\"openEditModal(").concat(e, ")\">Edit</button>\n        </div>\n        <span class=\"delete-icon\" onclick=\"deleteCard(").concat(e, ")\">&#10006;</span>\n            "), closeModal();
            } else console.error("Card not found!");
          } else console.error("User not found!");
        case 2:
        case "end":
          return _context12.stop();
      }
    }, _callee12);
  }));
  return _saveChanges.apply(this, arguments);
}
function showMore(_x7) {
  return _showMore.apply(this, arguments);
}
function _showMore() {
  _showMore = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(e) {
    var t, n, _t4, _e6, _n3, o;
    return _regeneratorRuntime().wrap(function _callee13$(_context13) {
      while (1) switch (_context13.prev = _context13.next) {
        case 0:
          t = sessionStorage.getItem("token"), n = usersData.find(function (e) {
            return e.token === t;
          });
          if (n) {
            _t4 = n.cards.find(function (t) {
              return t.id === e;
            });
            if (_t4) {
              _e6 = document.getElementById("detailsContainer"), _n3 = document.createElement("div");
              _n3.className = "details__content";
              o = "\n    <h4>Name: <span>".concat(_t4.name, "</span></h4>\n    <h4>Doctor: <span>").concat(_t4.doctor, "</span></h4>\n    <h4>Description: <span>").concat(_t4.description, "</span></h4>\n    <h4>Priority: <span>").concat(_t4.priority, "</span></h4>\n    <h4>Status: <span>").concat(_t4.status, "</span></h4>\n    <h4>Comment for doctor: <span>").concat(_t4.comment, "</span></h4>\n  ");
              "Cardiologist" === _t4.doctor ? _n3.innerHTML = "\n    ".concat(o, "\n      <h4>Age: <span>").concat(_t4.age, "</span></h4>\n      <h4>Normalpressure: <span>").concat(_t4.pulse, "</span></h4>\n      <h4>Body mass index: <span>").concat(_t4.massIndex, "</span></h4>\n      <h4>Past diseases: <span>").concat(_t4.pastDiseases, "</span></h4>\n    ") : "Dentist" === _t4.doctor ? _n3.innerHTML = "\n    ".concat(o, "\n      <h4>Date of the last visit: <span>").concat(_t4.lastVisit, "</span></h4>\n    ") : "Therapist" === _t4.doctor && (_n3.innerHTML = "\n    ".concat(o, "\n    <h4>Age: <span>").concat(_t4.age, "</span></h4>\n    ")), _e6.innerHTML = "", _e6.appendChild(_n3);
              document.getElementById("detailsModal").style.display = "block";
            } else console.error("Card not found!");
          } else console.error("User not found!");
        case 2:
        case "end":
          return _context13.stop();
      }
    }, _callee13);
  }));
  return _showMore.apply(this, arguments);
}
function closeShowMore() {
  document.getElementById("detailsModal").style.display = "none";
}
function filterCards() {
  return _filterCards.apply(this, arguments);
}
function _filterCards() {
  _filterCards = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {
    var e, t, n, o, s, i, a;
    return _regeneratorRuntime().wrap(function _callee14$(_context14) {
      while (1) switch (_context14.prev = _context14.next) {
        case 0:
          e = sessionStorage.getItem("token"), t = document.getElementById("searchInput").value.toLowerCase(), n = document.getElementById("doctorFilter").value, o = document.getElementById("statusFilter").value, s = document.getElementById("priorityFilter").value, i = usersData.find(function (t) {
            return t.token === e;
          }), a = i.cards;
          i ? a.forEach(function (e) {
            var i = document.querySelector(".card[data-id=\"".concat(e.id, "\"]")),
              a = e.name,
              r = e.doctor,
              l = e.status,
              d = e.priority,
              c = a ? a.toLowerCase() : "",
              u = r || "",
              p = l ? l.toLowerCase() : "",
              m = d ? d.toLowerCase() : "",
              y = c.includes(t),
              f = "" === n || u === n,
              h = "" === o || p === o,
              v = "" === s || m === s;
            i.style.display = y && h && v && f ? "" : "none";
          }) : console.error("User not found!");
        case 2:
        case "end":
          return _context14.stop();
      }
    }, _callee14);
  }));
  return _filterCards.apply(this, arguments);
}
login();
"use strict";

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var btnMakeForm = document.querySelector(".header__btn-make-visit"),
  form = document.querySelector(".header__form"),
  createModal = document.getElementById("createModal"),
  inputCreateName = document.querySelector("#create__inputName"),
  purpose = document.querySelector("#create__inputPurpose"),
  age = document.querySelector("#create__inputAge"),
  pulse = document.querySelector("#create__inputPressure"),
  massIndex = document.querySelector("#create__inputBMI"),
  description = document.querySelector("#create__inputDescription"),
  pastDiseases = document.querySelector("#create__inputDisease"),
  lastVisit = document.querySelector("#create__inputLastVisit"),
  comment = document.querySelector("#create__inputComment"),
  error = document.querySelector(".form__error"),
  btnCloseForm = document.querySelector(".form__button-close-form"),
  selectMenuDoctors = document.querySelector(".form__selector-doctors"),
  selectPriorityContainer = document.querySelector("#create__selectPriority"),
  btnCreateVisit = document.querySelector(".form__button-create-visit");
var elementsForm = document.querySelectorAll(".form input, .form select"),
  formData = [];
var Module = /*#__PURE__*/function () {
  function Module() {
    _classCallCheck(this, Module);
  }
  _createClass(Module, [{
    key: "clearModal",
    value: function clearModal() {
      form.style.display = "none", createModal.style.display = "none", elementsForm.forEach(function (e) {
        e.value = "";
      }), purpose.style.display = "none", description.style.display = "none", inputCreateName.style.display = "none", selectPriorityContainer.style.display = "none", btnCreateVisit.style.display = "none", comment.style.display = "none", pastDiseases.style.display = "none", massIndex.style.display = "none", pulse.style.display = "none", age.style.display = "none", lastVisit.style.display = "none", error.style.display = "none";
    }
  }, {
    key: "closeForm",
    value: function closeForm() {
      var _this = this;
      btnCloseForm.addEventListener("click", function (e) {
        e.preventDefault(), _this.clearModal();
      }), document.addEventListener("click", function (e) {
        e.target === createModal && _this.clearModal();
      });
    }
  }, {
    key: "sendInfo",
    value: function sendInfo() {
      var _this2 = this;
      btnCreateVisit.addEventListener("click", /*#__PURE__*/function () {
        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {
          var _e, _e2, t, _e3, _t, _o, r, o;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                e.preventDefault();
                if (!Array.from(document.querySelectorAll(".form div")).filter(function (e) {
                  return "none" !== window.getComputedStyle(e).display && "create__inputComment" !== e.id;
                }).some(function (e) {
                  return Array.from(e.querySelectorAll("input, select")).some(function (e) {
                    return "" === e.value;
                  });
                })) {
                  _context.next = 3;
                  break;
                }
                return _context.abrupt("return", void (error.style.display = "block"));
              case 3:
                if (!("none" !== age.style.display && (parseFloat(document.querySelector("#createAge").value) >= 150 || parseFloat(document.querySelector("#createAge").value) <= 0))) {
                  _context.next = 5;
                  break;
                }
                return _context.abrupt("return", (error.textContent = "Incorrect value! Enter your real age", void (error.style.display = "block")));
              case 5:
                if (!("none" !== pulse.style.display)) {
                  _context.next = 9;
                  break;
                }
                _e = parseFloat(document.querySelector("#createPressure").value);
                if (!(isNaN(_e) || _e >= 170 || _e <= 50)) {
                  _context.next = 9;
                  break;
                }
                return _context.abrupt("return", (error.textContent = "Incorrect value! Enter your real pulse", void (error.style.display = "block")));
              case 9:
                if (!("none" !== massIndex.style.display)) {
                  _context.next = 13;
                  break;
                }
                _e2 = parseFloat(document.querySelector("#createBMI").value);
                if (!(isNaN(_e2) || _e2 >= 700 || _e2 <= 0)) {
                  _context.next = 13;
                  break;
                }
                return _context.abrupt("return", (error.textContent = "Incorrect value! Enter your real mass index", void (error.style.display = "block")));
              case 13:
                t = document.querySelector("#createName").value;
                if (isNaN(parseFloat(t))) {
                  _context.next = 16;
                  break;
                }
                return _context.abrupt("return", (error.textContent = "Incorrect value! Enter your real name", void (error.style.display = "block")));
              case 16:
                if (!("none" !== lastVisit.style.display)) {
                  _context.next = 20;
                  break;
                }
                _e3 = new Date("1950-01-01"), _t = new Date(), _o = document.querySelector("#createLastVisitDate"), r = new Date(_o.value);
                if (!(r <= _e3 || r >= _t)) {
                  _context.next = 20;
                  break;
                }
                return _context.abrupt("return", (error.textContent = "Incorrect value! Enter correct data", void (error.style.display = "block")));
              case 20:
                o = new CreateVisit();
                _this2.clearModal();
                _context.prev = 22;
                _context.next = 25;
                return _sendInfo(o);
              case 25:
                _context.next = 27;
                return fetchAndDisplayCards();
              case 27:
                _context.next = 32;
                break;
              case 29:
                _context.prev = 29;
                _context.t0 = _context["catch"](22);
                console.error("Error sending data:", _context.t0);
              case 32:
              case "end":
                return _context.stop();
            }
          }, _callee, null, [[22, 29]]);
        }));
        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }());
    }
  }]);
  return Module;
}();
var Visit = /*#__PURE__*/function () {
  function Visit() {
    _classCallCheck(this, Visit);
    this.dontAddElements = !0;
  }
  _createClass(Visit, [{
    key: "makeOptions",
    value: function makeOptions() {
      if (selectMenuDoctors && !0 === this.dontAddElements) {
        this.dontAddElements = !1;
        var e = function e() {
          purpose.style.display = "block", description.style.display = "block", inputCreateName.style.display = "block", selectPriorityContainer.style.display = "flex", btnCreateVisit.style.display = "block", comment.style.display = "block";
        };
        selectMenuDoctors.addEventListener("change", e);
      }
    }
  }]);
  return Visit;
}();
var VisitDentist = /*#__PURE__*/function (_Visit) {
  _inherits(VisitDentist, _Visit);
  function VisitDentist() {
    _classCallCheck(this, VisitDentist);
    return _callSuper(this, VisitDentist);
  }
  _createClass(VisitDentist, [{
    key: "doctorNotes",
    value: function doctorNotes() {
      selectMenuDoctors && selectMenuDoctors.addEventListener("change", function () {
        "Dentist" === selectMenuDoctors.value ? lastVisit.style.display = "block" : lastVisit.style.display = "none";
      });
    }
  }]);
  return VisitDentist;
}(Visit);
var VisitTherapist = /*#__PURE__*/function (_Visit2) {
  _inherits(VisitTherapist, _Visit2);
  function VisitTherapist() {
    _classCallCheck(this, VisitTherapist);
    return _callSuper(this, VisitTherapist);
  }
  _createClass(VisitTherapist, [{
    key: "doctorNotes",
    value: function doctorNotes() {
      selectMenuDoctors && selectMenuDoctors.addEventListener("change", function () {
        "Cardiologist" === selectMenuDoctors.value || "Therapist" === selectMenuDoctors.value ? age.style.display = "block" : age.style.display = "none";
      });
    }
  }]);
  return VisitTherapist;
}(Visit);
var VisitCardiologist = /*#__PURE__*/function (_Visit3) {
  _inherits(VisitCardiologist, _Visit3);
  function VisitCardiologist() {
    _classCallCheck(this, VisitCardiologist);
    return _callSuper(this, VisitCardiologist);
  }
  _createClass(VisitCardiologist, [{
    key: "doctorNotes",
    value: function doctorNotes() {
      selectMenuDoctors && selectMenuDoctors.addEventListener("change", function () {
        "Cardiologist" === selectMenuDoctors.value ? (pulse.style.display = "block", massIndex.style.display = "block", pastDiseases.style.display = "block") : (pastDiseases.style.display = "none", massIndex.style.display = "none", pulse.style.display = "none");
      });
    }
  }]);
  return VisitCardiologist;
}(Visit);
function openModalWindow() {
  createModal.style.display = "block", form.style.display = "flex";
}
var _module = new Module(),
  visit = new Visit();
visit.makeOptions();
var visitDentist = new VisitDentist();
visitDentist.doctorNotes();
var visitTherapist = new VisitTherapist();
visitTherapist.doctorNotes();
var visitCardiologist = new VisitCardiologist();
visitCardiologist.doctorNotes(), _module.sendInfo(), _module.closeForm();
var CreateVisit = /*#__PURE__*/_createClass(function CreateVisit() {
  _classCallCheck(this, CreateVisit);
  this.doctor = form.querySelector(".form__selector-doctors").value, this.name = form.querySelector(".form__patient-name").value, this.priority = form.querySelector(".form__selector-urgency").value, this.purpose = form.querySelector(".form__purpose").value, this.description = form.querySelector(".form__description").value, this.lastVisit = form.querySelector(".form__last-visit").value, this.age = form.querySelector(".form__age").value, this.pulse = form.querySelector(".form__pulse").value, this.massIndex = form.querySelector(".form__mass-index").value, this.pastDiseases = form.querySelector(".form__past-diseases").value, this.comment = form.querySelector(".form__comment").value, this.status = "active";
});
function _sendInfo(_x2) {
  return _sendInfo2.apply(this, arguments);
}
function _sendInfo2() {
  _sendInfo2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e) {
    var t, o, _t2;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          t = sessionStorage.getItem("token");
          _context2.prev = 1;
          o = usersData.find(function (e) {
            return e.token === t;
          });
          if (!o) {
            _context2.next = 6;
            break;
          }
          _t2 = _objectSpread({
            id: Math.floor(1e4 * Math.random())
          }, e);
          return _context2.abrupt("return", (o.cards.push(_t2), _t2));
        case 6:
          throw new Error("User not found!");
        case 9:
          _context2.prev = 9;
          _context2.t0 = _context2["catch"](1);
          throw console.error("Error sending data:", _context2.t0), new Error(_context2.t0);
        case 12:
        case "end":
          return _context2.stop();
      }
    }, _callee2, null, [[1, 9]]);
  }));
  return _sendInfo2.apply(this, arguments);
}